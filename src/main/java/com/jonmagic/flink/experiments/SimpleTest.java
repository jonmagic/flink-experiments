// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SimpleTest.proto

package com.jonmagic.flink.experiments;

/**
 * Protobuf type {@code com.jonmagic.flink.experiments.SimpleTest}
 */
public final class SimpleTest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.jonmagic.flink.experiments.SimpleTest)
    SimpleTestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SimpleTest.newBuilder() to construct.
  private SimpleTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SimpleTest() {
    name_ = "";
    content_ = com.google.protobuf.ByteString.EMPTY;
    valueArr_ = java.util.Collections.emptyList();
    corpusInt_ = 0;
    corpusStr_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SimpleTest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 6:
        return internalGetValueMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.jonmagic.flink.experiments.SimpleTest.class, com.jonmagic.flink.experiments.SimpleTest.Builder.class);
  }

  /**
   * Protobuf enum {@code com.jonmagic.flink.experiments.SimpleTest.Corpus}
   */
  public enum Corpus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNIVERSAL = 0;</code>
     */
    UNIVERSAL(0),
    /**
     * <code>WEB = 1;</code>
     */
    WEB(1),
    /**
     * <code>IMAGES = 2;</code>
     */
    IMAGES(2),
    /**
     * <code>LOCAL = 3;</code>
     */
    LOCAL(3),
    /**
     * <code>NEWS = 4;</code>
     */
    NEWS(4),
    /**
     * <code>PRODUCTS = 5;</code>
     */
    PRODUCTS(5),
    /**
     * <code>VIDEO = 7;</code>
     */
    VIDEO(7),
    ;

    /**
     * <code>UNIVERSAL = 0;</code>
     */
    public static final int UNIVERSAL_VALUE = 0;
    /**
     * <code>WEB = 1;</code>
     */
    public static final int WEB_VALUE = 1;
    /**
     * <code>IMAGES = 2;</code>
     */
    public static final int IMAGES_VALUE = 2;
    /**
     * <code>LOCAL = 3;</code>
     */
    public static final int LOCAL_VALUE = 3;
    /**
     * <code>NEWS = 4;</code>
     */
    public static final int NEWS_VALUE = 4;
    /**
     * <code>PRODUCTS = 5;</code>
     */
    public static final int PRODUCTS_VALUE = 5;
    /**
     * <code>VIDEO = 7;</code>
     */
    public static final int VIDEO_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Corpus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Corpus forNumber(int value) {
      switch (value) {
        case 0: return UNIVERSAL;
        case 1: return WEB;
        case 2: return IMAGES;
        case 3: return LOCAL;
        case 4: return NEWS;
        case 5: return PRODUCTS;
        case 7: return VIDEO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Corpus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Corpus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Corpus>() {
            public Corpus findValueByNumber(int number) {
              return Corpus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.jonmagic.flink.experiments.SimpleTest.getDescriptor().getEnumTypes().get(0);
    }

    private static final Corpus[] VALUES = values();

    public static Corpus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Corpus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.jonmagic.flink.experiments.SimpleTest.Corpus)
  }

  public interface InnerMessageTestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 v1 = 1;</code>
     * @return Whether the v1 field is set.
     */
    boolean hasV1();
    /**
     * <code>optional int64 v1 = 1;</code>
     * @return The v1.
     */
    long getV1();

    /**
     * <code>optional int32 v2 = 2;</code>
     * @return Whether the v2 field is set.
     */
    boolean hasV2();
    /**
     * <code>optional int32 v2 = 2;</code>
     * @return The v2.
     */
    int getV2();
  }
  /**
   * Protobuf type {@code com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest}
   */
  public static final class InnerMessageTest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest)
      InnerMessageTestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InnerMessageTest.newBuilder() to construct.
    private InnerMessageTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InnerMessageTest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InnerMessageTest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_InnerMessageTest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_InnerMessageTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.class, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder.class);
    }

    private int bitField0_;
    public static final int V1_FIELD_NUMBER = 1;
    private long v1_;
    /**
     * <code>optional int64 v1 = 1;</code>
     * @return Whether the v1 field is set.
     */
    @java.lang.Override
    public boolean hasV1() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 v1 = 1;</code>
     * @return The v1.
     */
    @java.lang.Override
    public long getV1() {
      return v1_;
    }

    public static final int V2_FIELD_NUMBER = 2;
    private int v2_;
    /**
     * <code>optional int32 v2 = 2;</code>
     * @return Whether the v2 field is set.
     */
    @java.lang.Override
    public boolean hasV2() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 v2 = 2;</code>
     * @return The v2.
     */
    @java.lang.Override
    public int getV2() {
      return v2_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, v1_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, v2_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, v1_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, v2_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest)) {
        return super.equals(obj);
      }
      com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest other = (com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest) obj;

      if (hasV1() != other.hasV1()) return false;
      if (hasV1()) {
        if (getV1()
            != other.getV1()) return false;
      }
      if (hasV2() != other.hasV2()) return false;
      if (hasV2()) {
        if (getV2()
            != other.getV2()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasV1()) {
        hash = (37 * hash) + V1_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getV1());
      }
      if (hasV2()) {
        hash = (37 * hash) + V2_FIELD_NUMBER;
        hash = (53 * hash) + getV2();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest)
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_InnerMessageTest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_InnerMessageTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.class, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder.class);
      }

      // Construct using com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        v1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        v2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_InnerMessageTest_descriptor;
      }

      @java.lang.Override
      public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getDefaultInstanceForType() {
        return com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.getDefaultInstance();
      }

      @java.lang.Override
      public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest build() {
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest buildPartial() {
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest result = new com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.v1_ = v1_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.v2_ = v2_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest) {
          return mergeFrom((com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest other) {
        if (other == com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.getDefaultInstance()) return this;
        if (other.hasV1()) {
          setV1(other.getV1());
        }
        if (other.hasV2()) {
          setV2(other.getV2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                v1_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                v2_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long v1_ ;
      /**
       * <code>optional int64 v1 = 1;</code>
       * @return Whether the v1 field is set.
       */
      @java.lang.Override
      public boolean hasV1() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int64 v1 = 1;</code>
       * @return The v1.
       */
      @java.lang.Override
      public long getV1() {
        return v1_;
      }
      /**
       * <code>optional int64 v1 = 1;</code>
       * @param value The v1 to set.
       * @return This builder for chaining.
       */
      public Builder setV1(long value) {
        bitField0_ |= 0x00000001;
        v1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 v1 = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearV1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        v1_ = 0L;
        onChanged();
        return this;
      }

      private int v2_ ;
      /**
       * <code>optional int32 v2 = 2;</code>
       * @return Whether the v2 field is set.
       */
      @java.lang.Override
      public boolean hasV2() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 v2 = 2;</code>
       * @return The v2.
       */
      @java.lang.Override
      public int getV2() {
        return v2_;
      }
      /**
       * <code>optional int32 v2 = 2;</code>
       * @param value The v2 to set.
       * @return This builder for chaining.
       */
      public Builder setV2(int value) {
        bitField0_ |= 0x00000002;
        v2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 v2 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearV2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        v2_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest)
    }

    // @@protoc_insertion_point(class_scope:com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest)
    private static final com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest();
    }

    public static com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<InnerMessageTest>
        PARSER = new com.google.protobuf.AbstractParser<InnerMessageTest>() {
      @java.lang.Override
      public InnerMessageTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<InnerMessageTest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InnerMessageTest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int UID_FIELD_NUMBER = 1;
  private long uid_;
  /**
   * <code>optional int64 uid = 1;</code>
   * @return Whether the uid field is set.
   */
  @java.lang.Override
  public boolean hasUid() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional int64 uid = 1;</code>
   * @return The uid.
   */
  @java.lang.Override
  public long getUid() {
    return uid_;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 2;</code>
   * @return Whether the name field is set.
   */
  @java.lang.Override
  public boolean hasName() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional string name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        name_ = s;
      }
      return s;
    }
  }
  /**
   * <code>optional string name = 2;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CATEGORY_TYPE_FIELD_NUMBER = 3;
  private int categoryType_;
  /**
   * <code>optional int32 category_type = 3;</code>
   * @return Whether the categoryType field is set.
   */
  @java.lang.Override
  public boolean hasCategoryType() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <code>optional int32 category_type = 3;</code>
   * @return The categoryType.
   */
  @java.lang.Override
  public int getCategoryType() {
    return categoryType_;
  }

  public static final int CONTENT_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString content_;
  /**
   * <code>optional bytes content = 4;</code>
   * @return Whether the content field is set.
   */
  @java.lang.Override
  public boolean hasContent() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <code>optional bytes content = 4;</code>
   * @return The content.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getContent() {
    return content_;
  }

  public static final int PRICE_FIELD_NUMBER = 5;
  private double price_;
  /**
   * <code>optional double price = 5;</code>
   * @return Whether the price field is set.
   */
  @java.lang.Override
  public boolean hasPrice() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <code>optional double price = 5;</code>
   * @return The price.
   */
  @java.lang.Override
  public double getPrice() {
    return price_;
  }

  public static final int VALUE_MAP_FIELD_NUMBER = 6;
  private static final class ValueMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>newDefaultInstance(
                com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_ValueMapEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.INT64,
                0L,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> valueMap_;
  private com.google.protobuf.MapField<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>
  internalGetValueMap() {
    if (valueMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ValueMapDefaultEntryHolder.defaultEntry);
    }
    return valueMap_;
  }

  public int getValueMapCount() {
    return internalGetValueMap().getMap().size();
  }
  /**
   * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
   */

  @java.lang.Override
  public boolean containsValueMap(
      long key) {
    
    return internalGetValueMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getValueMapMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> getValueMap() {
    return getValueMapMap();
  }
  /**
   * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> getValueMapMap() {
    return internalGetValueMap().getMap();
  }
  /**
   * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
   */
  @java.lang.Override

  public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getValueMapOrDefault(
      long key,
      com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest defaultValue) {
    
    java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> map =
        internalGetValueMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
   */
  @java.lang.Override

  public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getValueMapOrThrow(
      long key) {
    
    java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> map =
        internalGetValueMap().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int VALUE_ARR_FIELD_NUMBER = 7;
  private java.util.List<com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> valueArr_;
  /**
   * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
   */
  @java.lang.Override
  public java.util.List<com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> getValueArrList() {
    return valueArr_;
  }
  /**
   * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder> 
      getValueArrOrBuilderList() {
    return valueArr_;
  }
  /**
   * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
   */
  @java.lang.Override
  public int getValueArrCount() {
    return valueArr_.size();
  }
  /**
   * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
   */
  @java.lang.Override
  public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getValueArr(int index) {
    return valueArr_.get(index);
  }
  /**
   * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
   */
  @java.lang.Override
  public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder getValueArrOrBuilder(
      int index) {
    return valueArr_.get(index);
  }

  public static final int CORPUS_INT_FIELD_NUMBER = 8;
  private int corpusInt_;
  /**
   * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_int = 8;</code>
   * @return Whether the corpusInt field is set.
   */
  @java.lang.Override public boolean hasCorpusInt() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_int = 8;</code>
   * @return The corpusInt.
   */
  @java.lang.Override public com.jonmagic.flink.experiments.SimpleTest.Corpus getCorpusInt() {
    @SuppressWarnings("deprecation")
    com.jonmagic.flink.experiments.SimpleTest.Corpus result = com.jonmagic.flink.experiments.SimpleTest.Corpus.valueOf(corpusInt_);
    return result == null ? com.jonmagic.flink.experiments.SimpleTest.Corpus.UNIVERSAL : result;
  }

  public static final int CORPUS_STR_FIELD_NUMBER = 9;
  private int corpusStr_;
  /**
   * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_str = 9;</code>
   * @return Whether the corpusStr field is set.
   */
  @java.lang.Override public boolean hasCorpusStr() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_str = 9;</code>
   * @return The corpusStr.
   */
  @java.lang.Override public com.jonmagic.flink.experiments.SimpleTest.Corpus getCorpusStr() {
    @SuppressWarnings("deprecation")
    com.jonmagic.flink.experiments.SimpleTest.Corpus result = com.jonmagic.flink.experiments.SimpleTest.Corpus.valueOf(corpusStr_);
    return result == null ? com.jonmagic.flink.experiments.SimpleTest.Corpus.UNIVERSAL : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt64(1, uid_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt32(3, categoryType_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeBytes(4, content_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      output.writeDouble(5, price_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeLongMapTo(
        output,
        internalGetValueMap(),
        ValueMapDefaultEntryHolder.defaultEntry,
        6);
    for (int i = 0; i < valueArr_.size(); i++) {
      output.writeMessage(7, valueArr_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      output.writeEnum(8, corpusInt_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      output.writeEnum(9, corpusStr_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, uid_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, categoryType_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(4, content_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, price_);
    }
    for (java.util.Map.Entry<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> entry
         : internalGetValueMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>
      valueMap__ = ValueMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, valueMap__);
    }
    for (int i = 0; i < valueArr_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, valueArr_.get(i));
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, corpusInt_);
    }
    if (((bitField0_ & 0x00000040) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, corpusStr_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.jonmagic.flink.experiments.SimpleTest)) {
      return super.equals(obj);
    }
    com.jonmagic.flink.experiments.SimpleTest other = (com.jonmagic.flink.experiments.SimpleTest) obj;

    if (hasUid() != other.hasUid()) return false;
    if (hasUid()) {
      if (getUid()
          != other.getUid()) return false;
    }
    if (hasName() != other.hasName()) return false;
    if (hasName()) {
      if (!getName()
          .equals(other.getName())) return false;
    }
    if (hasCategoryType() != other.hasCategoryType()) return false;
    if (hasCategoryType()) {
      if (getCategoryType()
          != other.getCategoryType()) return false;
    }
    if (hasContent() != other.hasContent()) return false;
    if (hasContent()) {
      if (!getContent()
          .equals(other.getContent())) return false;
    }
    if (hasPrice() != other.hasPrice()) return false;
    if (hasPrice()) {
      if (java.lang.Double.doubleToLongBits(getPrice())
          != java.lang.Double.doubleToLongBits(
              other.getPrice())) return false;
    }
    if (!internalGetValueMap().equals(
        other.internalGetValueMap())) return false;
    if (!getValueArrList()
        .equals(other.getValueArrList())) return false;
    if (hasCorpusInt() != other.hasCorpusInt()) return false;
    if (hasCorpusInt()) {
      if (corpusInt_ != other.corpusInt_) return false;
    }
    if (hasCorpusStr() != other.hasCorpusStr()) return false;
    if (hasCorpusStr()) {
      if (corpusStr_ != other.corpusStr_) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasUid()) {
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUid());
    }
    if (hasName()) {
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
    }
    if (hasCategoryType()) {
      hash = (37 * hash) + CATEGORY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCategoryType();
    }
    if (hasContent()) {
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
    }
    if (hasPrice()) {
      hash = (37 * hash) + PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPrice()));
    }
    if (!internalGetValueMap().getMap().isEmpty()) {
      hash = (37 * hash) + VALUE_MAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetValueMap().hashCode();
    }
    if (getValueArrCount() > 0) {
      hash = (37 * hash) + VALUE_ARR_FIELD_NUMBER;
      hash = (53 * hash) + getValueArrList().hashCode();
    }
    if (hasCorpusInt()) {
      hash = (37 * hash) + CORPUS_INT_FIELD_NUMBER;
      hash = (53 * hash) + corpusInt_;
    }
    if (hasCorpusStr()) {
      hash = (37 * hash) + CORPUS_STR_FIELD_NUMBER;
      hash = (53 * hash) + corpusStr_;
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.jonmagic.flink.experiments.SimpleTest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.jonmagic.flink.experiments.SimpleTest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.jonmagic.flink.experiments.SimpleTest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.jonmagic.flink.experiments.SimpleTest)
      com.jonmagic.flink.experiments.SimpleTestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetValueMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 6:
          return internalGetMutableValueMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.jonmagic.flink.experiments.SimpleTest.class, com.jonmagic.flink.experiments.SimpleTest.Builder.class);
    }

    // Construct using com.jonmagic.flink.experiments.SimpleTest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      uid_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      name_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      categoryType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      content_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      price_ = 0D;
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableValueMap().clear();
      if (valueArrBuilder_ == null) {
        valueArr_ = java.util.Collections.emptyList();
      } else {
        valueArr_ = null;
        valueArrBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      corpusInt_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      corpusStr_ = 0;
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.jonmagic.flink.experiments.SimpleTestOuterClass.internal_static_com_jonmagic_flink_experiments_SimpleTest_descriptor;
    }

    @java.lang.Override
    public com.jonmagic.flink.experiments.SimpleTest getDefaultInstanceForType() {
      return com.jonmagic.flink.experiments.SimpleTest.getDefaultInstance();
    }

    @java.lang.Override
    public com.jonmagic.flink.experiments.SimpleTest build() {
      com.jonmagic.flink.experiments.SimpleTest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.jonmagic.flink.experiments.SimpleTest buildPartial() {
      com.jonmagic.flink.experiments.SimpleTest result = new com.jonmagic.flink.experiments.SimpleTest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.uid_ = uid_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        to_bitField0_ |= 0x00000002;
      }
      result.name_ = name_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.categoryType_ = categoryType_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        to_bitField0_ |= 0x00000008;
      }
      result.content_ = content_;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.price_ = price_;
        to_bitField0_ |= 0x00000010;
      }
      result.valueMap_ = internalGetValueMap();
      result.valueMap_.makeImmutable();
      if (valueArrBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          valueArr_ = java.util.Collections.unmodifiableList(valueArr_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.valueArr_ = valueArr_;
      } else {
        result.valueArr_ = valueArrBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        to_bitField0_ |= 0x00000020;
      }
      result.corpusInt_ = corpusInt_;
      if (((from_bitField0_ & 0x00000100) != 0)) {
        to_bitField0_ |= 0x00000040;
      }
      result.corpusStr_ = corpusStr_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.jonmagic.flink.experiments.SimpleTest) {
        return mergeFrom((com.jonmagic.flink.experiments.SimpleTest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.jonmagic.flink.experiments.SimpleTest other) {
      if (other == com.jonmagic.flink.experiments.SimpleTest.getDefaultInstance()) return this;
      if (other.hasUid()) {
        setUid(other.getUid());
      }
      if (other.hasName()) {
        bitField0_ |= 0x00000002;
        name_ = other.name_;
        onChanged();
      }
      if (other.hasCategoryType()) {
        setCategoryType(other.getCategoryType());
      }
      if (other.hasContent()) {
        setContent(other.getContent());
      }
      if (other.hasPrice()) {
        setPrice(other.getPrice());
      }
      internalGetMutableValueMap().mergeFrom(
          other.internalGetValueMap());
      if (valueArrBuilder_ == null) {
        if (!other.valueArr_.isEmpty()) {
          if (valueArr_.isEmpty()) {
            valueArr_ = other.valueArr_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureValueArrIsMutable();
            valueArr_.addAll(other.valueArr_);
          }
          onChanged();
        }
      } else {
        if (!other.valueArr_.isEmpty()) {
          if (valueArrBuilder_.isEmpty()) {
            valueArrBuilder_.dispose();
            valueArrBuilder_ = null;
            valueArr_ = other.valueArr_;
            bitField0_ = (bitField0_ & ~0x00000040);
            valueArrBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getValueArrFieldBuilder() : null;
          } else {
            valueArrBuilder_.addAllMessages(other.valueArr_);
          }
        }
      }
      if (other.hasCorpusInt()) {
        setCorpusInt(other.getCorpusInt());
      }
      if (other.hasCorpusStr()) {
        setCorpusStr(other.getCorpusStr());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              uid_ = input.readInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              name_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              categoryType_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              content_ = input.readBytes();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 41: {
              price_ = input.readDouble();
              bitField0_ |= 0x00000010;
              break;
            } // case 41
            case 50: {
              com.google.protobuf.MapEntry<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>
              valueMap__ = input.readMessage(
                  ValueMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableValueMap().getMutableMap().put(
                  valueMap__.getKey(), valueMap__.getValue());
              break;
            } // case 50
            case 58: {
              com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest m =
                  input.readMessage(
                      com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.PARSER,
                      extensionRegistry);
              if (valueArrBuilder_ == null) {
                ensureValueArrIsMutable();
                valueArr_.add(m);
              } else {
                valueArrBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 64: {
              int tmpRaw = input.readEnum();
              com.jonmagic.flink.experiments.SimpleTest.Corpus tmpValue =
                  com.jonmagic.flink.experiments.SimpleTest.Corpus.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(8, tmpRaw);
              } else {
                corpusInt_ = tmpRaw;
                bitField0_ |= 0x00000080;
              }
              break;
            } // case 64
            case 72: {
              int tmpRaw = input.readEnum();
              com.jonmagic.flink.experiments.SimpleTest.Corpus tmpValue =
                  com.jonmagic.flink.experiments.SimpleTest.Corpus.forNumber(tmpRaw);
              if (tmpValue == null) {
                mergeUnknownVarintField(9, tmpRaw);
              } else {
                corpusStr_ = tmpRaw;
                bitField0_ |= 0x00000100;
              }
              break;
            } // case 72
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long uid_ ;
    /**
     * <code>optional int64 uid = 1;</code>
     * @return Whether the uid field is set.
     */
    @java.lang.Override
    public boolean hasUid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 uid = 1;</code>
     * @return The uid.
     */
    @java.lang.Override
    public long getUid() {
      return uid_;
    }
    /**
     * <code>optional int64 uid = 1;</code>
     * @param value The uid to set.
     * @return This builder for chaining.
     */
    public Builder setUid(long value) {
      bitField0_ |= 0x00000001;
      uid_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 uid = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearUid() {
      bitField0_ = (bitField0_ & ~0x00000001);
      uid_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      bitField0_ = (bitField0_ & ~0x00000002);
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      name_ = value;
      onChanged();
      return this;
    }

    private int categoryType_ ;
    /**
     * <code>optional int32 category_type = 3;</code>
     * @return Whether the categoryType field is set.
     */
    @java.lang.Override
    public boolean hasCategoryType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 category_type = 3;</code>
     * @return The categoryType.
     */
    @java.lang.Override
    public int getCategoryType() {
      return categoryType_;
    }
    /**
     * <code>optional int32 category_type = 3;</code>
     * @param value The categoryType to set.
     * @return This builder for chaining.
     */
    public Builder setCategoryType(int value) {
      bitField0_ |= 0x00000004;
      categoryType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 category_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCategoryType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      categoryType_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes content = 4;</code>
     * @return Whether the content field is set.
     */
    @java.lang.Override
    public boolean hasContent() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bytes content = 4;</code>
     * @return The content.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }
    /**
     * <code>optional bytes content = 4;</code>
     * @param value The content to set.
     * @return This builder for chaining.
     */
    public Builder setContent(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
      content_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bytes content = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearContent() {
      bitField0_ = (bitField0_ & ~0x00000008);
      content_ = getDefaultInstance().getContent();
      onChanged();
      return this;
    }

    private double price_ ;
    /**
     * <code>optional double price = 5;</code>
     * @return Whether the price field is set.
     */
    @java.lang.Override
    public boolean hasPrice() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional double price = 5;</code>
     * @return The price.
     */
    @java.lang.Override
    public double getPrice() {
      return price_;
    }
    /**
     * <code>optional double price = 5;</code>
     * @param value The price to set.
     * @return This builder for chaining.
     */
    public Builder setPrice(double value) {
      bitField0_ |= 0x00000010;
      price_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double price = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrice() {
      bitField0_ = (bitField0_ & ~0x00000010);
      price_ = 0D;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> valueMap_;
    private com.google.protobuf.MapField<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>
    internalGetValueMap() {
      if (valueMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ValueMapDefaultEntryHolder.defaultEntry);
      }
      return valueMap_;
    }
    private com.google.protobuf.MapField<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>
    internalGetMutableValueMap() {
      onChanged();;
      if (valueMap_ == null) {
        valueMap_ = com.google.protobuf.MapField.newMapField(
            ValueMapDefaultEntryHolder.defaultEntry);
      }
      if (!valueMap_.isMutable()) {
        valueMap_ = valueMap_.copy();
      }
      return valueMap_;
    }

    public int getValueMapCount() {
      return internalGetValueMap().getMap().size();
    }
    /**
     * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
     */

    @java.lang.Override
    public boolean containsValueMap(
        long key) {
      
      return internalGetValueMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getValueMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> getValueMap() {
      return getValueMapMap();
    }
    /**
     * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> getValueMapMap() {
      return internalGetValueMap().getMap();
    }
    /**
     * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
     */
    @java.lang.Override

    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getValueMapOrDefault(
        long key,
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest defaultValue) {
      
      java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> map =
          internalGetValueMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
     */
    @java.lang.Override

    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getValueMapOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> map =
          internalGetValueMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearValueMap() {
      internalGetMutableValueMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
     */

    public Builder removeValueMap(
        long key) {
      
      internalGetMutableValueMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>
    getMutableValueMap() {
      return internalGetMutableValueMap().getMutableMap();
    }
    /**
     * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
     */
    public Builder putValueMap(
        long key,
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value) {
      
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableValueMap().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int64, .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest&gt; value_map = 6;</code>
     */

    public Builder putAllValueMap(
        java.util.Map<java.lang.Long, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> values) {
      internalGetMutableValueMap().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.util.List<com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> valueArr_ =
      java.util.Collections.emptyList();
    private void ensureValueArrIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        valueArr_ = new java.util.ArrayList<com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest>(valueArr_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder> valueArrBuilder_;

    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public java.util.List<com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> getValueArrList() {
      if (valueArrBuilder_ == null) {
        return java.util.Collections.unmodifiableList(valueArr_);
      } else {
        return valueArrBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public int getValueArrCount() {
      if (valueArrBuilder_ == null) {
        return valueArr_.size();
      } else {
        return valueArrBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest getValueArr(int index) {
      if (valueArrBuilder_ == null) {
        return valueArr_.get(index);
      } else {
        return valueArrBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder setValueArr(
        int index, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value) {
      if (valueArrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueArrIsMutable();
        valueArr_.set(index, value);
        onChanged();
      } else {
        valueArrBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder setValueArr(
        int index, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder builderForValue) {
      if (valueArrBuilder_ == null) {
        ensureValueArrIsMutable();
        valueArr_.set(index, builderForValue.build());
        onChanged();
      } else {
        valueArrBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder addValueArr(com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value) {
      if (valueArrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueArrIsMutable();
        valueArr_.add(value);
        onChanged();
      } else {
        valueArrBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder addValueArr(
        int index, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value) {
      if (valueArrBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureValueArrIsMutable();
        valueArr_.add(index, value);
        onChanged();
      } else {
        valueArrBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder addValueArr(
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder builderForValue) {
      if (valueArrBuilder_ == null) {
        ensureValueArrIsMutable();
        valueArr_.add(builderForValue.build());
        onChanged();
      } else {
        valueArrBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder addValueArr(
        int index, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder builderForValue) {
      if (valueArrBuilder_ == null) {
        ensureValueArrIsMutable();
        valueArr_.add(index, builderForValue.build());
        onChanged();
      } else {
        valueArrBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder addAllValueArr(
        java.lang.Iterable<? extends com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest> values) {
      if (valueArrBuilder_ == null) {
        ensureValueArrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueArr_);
        onChanged();
      } else {
        valueArrBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder clearValueArr() {
      if (valueArrBuilder_ == null) {
        valueArr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        valueArrBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public Builder removeValueArr(int index) {
      if (valueArrBuilder_ == null) {
        ensureValueArrIsMutable();
        valueArr_.remove(index);
        onChanged();
      } else {
        valueArrBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder getValueArrBuilder(
        int index) {
      return getValueArrFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder getValueArrOrBuilder(
        int index) {
      if (valueArrBuilder_ == null) {
        return valueArr_.get(index);  } else {
        return valueArrBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public java.util.List<? extends com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder> 
         getValueArrOrBuilderList() {
      if (valueArrBuilder_ != null) {
        return valueArrBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(valueArr_);
      }
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder addValueArrBuilder() {
      return getValueArrFieldBuilder().addBuilder(
          com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.getDefaultInstance());
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder addValueArrBuilder(
        int index) {
      return getValueArrFieldBuilder().addBuilder(
          index, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.getDefaultInstance());
    }
    /**
     * <code>repeated .com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest value_arr = 7;</code>
     */
    public java.util.List<com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder> 
         getValueArrBuilderList() {
      return getValueArrFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder> 
        getValueArrFieldBuilder() {
      if (valueArrBuilder_ == null) {
        valueArrBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTest.Builder, com.jonmagic.flink.experiments.SimpleTest.InnerMessageTestOrBuilder>(
                valueArr_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        valueArr_ = null;
      }
      return valueArrBuilder_;
    }

    private int corpusInt_ = 0;
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_int = 8;</code>
     * @return Whether the corpusInt field is set.
     */
    @java.lang.Override public boolean hasCorpusInt() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_int = 8;</code>
     * @return The corpusInt.
     */
    @java.lang.Override
    public com.jonmagic.flink.experiments.SimpleTest.Corpus getCorpusInt() {
      @SuppressWarnings("deprecation")
      com.jonmagic.flink.experiments.SimpleTest.Corpus result = com.jonmagic.flink.experiments.SimpleTest.Corpus.valueOf(corpusInt_);
      return result == null ? com.jonmagic.flink.experiments.SimpleTest.Corpus.UNIVERSAL : result;
    }
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_int = 8;</code>
     * @param value The corpusInt to set.
     * @return This builder for chaining.
     */
    public Builder setCorpusInt(com.jonmagic.flink.experiments.SimpleTest.Corpus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000080;
      corpusInt_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_int = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearCorpusInt() {
      bitField0_ = (bitField0_ & ~0x00000080);
      corpusInt_ = 0;
      onChanged();
      return this;
    }

    private int corpusStr_ = 0;
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_str = 9;</code>
     * @return Whether the corpusStr field is set.
     */
    @java.lang.Override public boolean hasCorpusStr() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_str = 9;</code>
     * @return The corpusStr.
     */
    @java.lang.Override
    public com.jonmagic.flink.experiments.SimpleTest.Corpus getCorpusStr() {
      @SuppressWarnings("deprecation")
      com.jonmagic.flink.experiments.SimpleTest.Corpus result = com.jonmagic.flink.experiments.SimpleTest.Corpus.valueOf(corpusStr_);
      return result == null ? com.jonmagic.flink.experiments.SimpleTest.Corpus.UNIVERSAL : result;
    }
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_str = 9;</code>
     * @param value The corpusStr to set.
     * @return This builder for chaining.
     */
    public Builder setCorpusStr(com.jonmagic.flink.experiments.SimpleTest.Corpus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000100;
      corpusStr_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .com.jonmagic.flink.experiments.SimpleTest.Corpus corpus_str = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearCorpusStr() {
      bitField0_ = (bitField0_ & ~0x00000100);
      corpusStr_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.jonmagic.flink.experiments.SimpleTest)
  }

  // @@protoc_insertion_point(class_scope:com.jonmagic.flink.experiments.SimpleTest)
  private static final com.jonmagic.flink.experiments.SimpleTest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.jonmagic.flink.experiments.SimpleTest();
  }

  public static com.jonmagic.flink.experiments.SimpleTest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<SimpleTest>
      PARSER = new com.google.protobuf.AbstractParser<SimpleTest>() {
    @java.lang.Override
    public SimpleTest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SimpleTest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SimpleTest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.jonmagic.flink.experiments.SimpleTest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

